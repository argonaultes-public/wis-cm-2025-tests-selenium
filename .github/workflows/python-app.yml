# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  unittest:

    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_DATABASE: gosecuri
          MYSQL_USER: gosecuriuser
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and mysql
      run: |
        pytest test_models.py
      env:
        DB_URL: ${{ vars.DB_URL }}
    - name: Test with pytest and sqlite
      run: |
        pytest test_models.py
      env:
        DB_URL: "sqlite://"

  validatetest:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_DATABASE: gosecuri
          MYSQL_USER: gosecuriuser
          MYSQL_PASSWORD: secret  

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        apt install -y firefox
        python -m pip install --upgrade pip
        pip install pytest selenium
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Start flask server
      run: |
        nohup flask --app gosecuri run --debug > nohup.out 2> nohup.err < /dev/null &
    - name: Test with Selenium
      run: |
        pytest test_validation.py
      env:
        DB_URL: ${{ vars.DB_URL }}